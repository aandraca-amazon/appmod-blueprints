apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: app-deploy-with-git-repo
  title: App Deploy with Git Repo
  description: Creates a new Gitea Repo and ArgocCD for deploying an App
  tags:
    - app-deploy
    - gitea
    - argocd
spec:
  owner: guest
  type: service
  parameters:
    - title: Provide App Information
      required:
        - appName
        - repoName
      properties:
        appName:
          title: App Name
          type: string
          description: Name of the App
        repoName:
          title: Repo Name of your Gitea Repo
          type: string
          pattern: ^[a-zA-Z0-9-_.]+$
        repoUrl:
          title: Repo URL of your Gitea Repo integrated with Backstage
          type: string
        appNamespace:
          title: App Namespace
          type: string
          description: The namespace where the app should be deployed
          default: default
    - title: Provide Gitea Instance Information
  steps:
    - id: fetch-base
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          appName: ${{ parameters.appName }}
    - id: publish
      name: Publishing to a gitea git repository
      action: publish:gitea
      input:
        description: App with ${{parameters.appName}} for 
        repoUrl: ${{parameters.repoUrl}}?repo=${{parameters.repoName}}
        defaultBranch: main
    - id: create-argocd-app
      name: Create ArgoCD App
      action: cnoe:create-argocd-app
      input:
        appName: ${{parameters.appName}}
        appNamespace: ${{parameters.appNamespace}}
        argoInstance: argocd.aaos.aandraca.people.aws.dev
        projectName: default
        repoUrl: ${{parameters.repoUrl}}?repo=${{parameters.repoName}}
        path: "manifests"
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: 'catalog-info.yaml'
    - id: template-output
      name: Template Output
      action: debug:log
      input:
        listWorkspace: true
  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
